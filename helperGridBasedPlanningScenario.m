function [scenario, egoVehicle, sensors] = helperGridBasedPlanningScenario()
%helperGridBasedPlanningScenario This is a helper function for
%grid-based motion planning example. This function creates the multi-lidar driving
%scenario. 

% Generated by MATLAB(R) 9.9 (R2020b) and Automated Driving Toolbox 3.2 (R2020b).
% Generated on: 05-May-2020 14:42:13

% Create the drivingScenario object and ego car
[scenario, egoVehicle] = createDrivingScenario;

% Create all the sensorss
sensors = createSensors(scenario);

function [sensors, numSensors] = createSensors(scenario)
% createSensors Returns all sensor objects to generate detections

% Assign into each sensor the physical and radar profiles for all actors
profiles = actorProfiles(scenario);
sensors{1} = lidarPointCloudGenerator('SensorIndex', 1, ...
    'SensorLocation', [3.7 0], ...
    'MaxRange', 100, ...
    'DetectionCoordinates', 'Sensor Cartesian', ...
    'HasOrganizedOutput', false, ...
    'HasEgoVehicle', false, ...
    'HasRoadsInputPort', false, ...
    'AzimuthLimits', [-45 45], ...
    'ElevationLimits', [-20 20], ...
    'ActorProfiles', profiles);

sensors{2} = lidarPointCloudGenerator('SensorIndex', 2, ...
    'SensorLocation', [2.8 0.9], ...
    'Yaw', 75, ...
    'MaxRange', 100, ...
    'DetectionCoordinates', 'Sensor Cartesian', ...
    'HasOrganizedOutput', false, ...
    'HasEgoVehicle', false, ...
    'HasRoadsInputPort', false, ...
    'AzimuthLimits', [-45 45], ...
    'ElevationLimits',[-20 20], ...
    'ActorProfiles', profiles);

sensors{3} = lidarPointCloudGenerator('SensorIndex', 3, ...
    'SensorLocation', [2.8 0.9], ...
    'Yaw', 135, ...
    'MaxRange', 100, ...
    'DetectionCoordinates', 'Sensor Cartesian',...
    'HasOrganizedOutput', false, ...
    'HasEgoVehicle', false, ...
    'HasRoadsInputPort', false, ...
    'AzimuthLimits', [-45 45], ...
    'ElevationLimits',[-20 20],...
    'ActorProfiles', profiles);

sensors{4} = lidarPointCloudGenerator('SensorIndex', 4, ...
    'SensorLocation', [-1 0], ...
    'Yaw', 180, ...
    'MaxRange', 100, ...
    'DetectionCoordinates', 'Sensor Cartesian', ...
    'HasOrganizedOutput', false, ...
    'HasEgoVehicle', false, ...
    'HasRoadsInputPort', false, ...
    'AzimuthLimits', [-45 45], ...
    'ElevationLimits',[-20 20],...
    'ActorProfiles', profiles);

sensors{5} = lidarPointCloudGenerator('SensorIndex', 5, ...
    'SensorLocation', [2.8 -0.9], ...
    'Yaw', -75, ...
    'MaxRange', 100, ...
    'DetectionCoordinates', 'Sensor Cartesian', ...
    'HasOrganizedOutput', false, ...
    'HasEgoVehicle', false, ...
    'HasRoadsInputPort', false, ...
    'AzimuthLimits', [-45 45], ...
    'ElevationLimits',[-20 20], ...
    'ActorProfiles', profiles);

sensors{6} = lidarPointCloudGenerator('SensorIndex', 6, ...
    'SensorLocation', [2.8 -0.9], ...
    'Yaw', -135, ...
    'MaxRange', 100, ...
    'DetectionCoordinates', 'Sensor Cartesian', ...
    'HasOrganizedOutput', false, ...
    'HasEgoVehicle', false, ...
    'HasRoadsInputPort', false, ...
    'AzimuthLimits', [-45 45], ...
    'ElevationLimits',[-20 20],...
    'ActorProfiles', profiles);

numSensors = 6;

for i = 1:numSensors
sensors{i}.AzimuthResolution = 0.16;
sensors{i}.Height = 0.4;
sensors{i}.HasRoadsInputPort = false;
sensors{i}.HasOrganizedOutput = false;
end


function [scenario, egoVehicle] = createDrivingScenario

% Construct a drivingScenario object.
scenario = drivingScenario('SampleTime', 0.1);

% Add all road segments
roadCenters = [235.3 0.4 0;
    -125.4 0.2 0];
marking = [laneMarking('Solid', 'Color', [0.98 0.86 0.36])
    laneMarking('Solid')
    laneMarking('Dashed')
    laneMarking('DoubleSolid', 'Color', [0.98 0.86 0.36])
    laneMarking('Dashed')
    laneMarking('Solid')
    laneMarking('Solid')];
laneSpecification = lanespec(6, 'Width', 2.975, 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road');

roadCenters = [59.9 147.3 0;
    60 -150 0];
marking = [laneMarking('Solid', 'Color', [0.98 0.86 0.36])
    laneMarking('Solid')
    laneMarking('Dashed')
    laneMarking('DoubleSolid', 'Color', [0.98 0.86 0.36])
    laneMarking('Dashed')
    laneMarking('Solid')
    laneMarking('Solid')];
laneSpecification = lanespec(6, 'Width', 2.975, 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road1');

% Add the ego vehicle
egoVehicle = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-70 -4.5 0], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Name', 'Car');

% Add the non-ego actors
vehicle(scenario, ...
    'ClassID', 2, ...
    'Length', 8.2, ...
    'Width', 2.5, ...
    'Height', 3.5, ...
    'Position', [-52.3 7.5 0], ...
    'Yaw', 180, ...
    'FrontOverhang', 4.4, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.truckMesh, ...
    'Name', 'Truck');

car1 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-71.9 -1.5 0], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car1');
waypoints = [-71.9 -1.61 0;
    41.8 -1.5 0;
    49.6 -1.5 0;
    120.1 -1.5 0;
    250 -1.5 0];
speed = [15;15;15;15;15] - 5;
yaw =  [0.00189143154783872;-0.00378286309614528;0.00795499179428939;-0.125520549539422;-0.234996126239367];
waittime = [0;0;0;0;0];
trajectory(car1, waypoints, speed, waittime, 'Yaw', yaw);

vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-27.8 -7.5 0], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car2');

vehicle(scenario, ...
    'ClassID', 2, ...
    'Length', 8.2, ...
    'Width', 2.5, ...
    'Height', 3.5, ...
    'Position', [-2.9 -7.5 0], ...
    'RearOverhang', 0.573170731707317, ...
    'FrontOverhang', 2.5219512195122, ...
    'Wheelbase', 5.10487804878048, ...
    'Mesh', driving.scenario.truckMesh, ...
    'Name', 'Truck1');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-21.4 7.5 0], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car3');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-9.1 7.5 0], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car4');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [4 7.5 0], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car5');

actor(scenario, ...
    'ClassID', 4, ...
    'Length', 0.24, ...
    'Width', 0.45, ...
    'Height', 1.7, ...
    'Position', [51.1 9.2 0], ...
    'RCSPattern', [-8 -8;-8 -8], ...
    'Mesh', driving.scenario.pedestrianMesh, ...
    'Name', 'Pedestrian');

truck2 = vehicle(scenario, ...
    'ClassID', 2, ...
    'Length', 8.2, ...
    'Width', 2.5, ...
    'Height', 3.5, ...
    'Position', [2.10015990732619 1.5897464144672 0], ...
    'FrontOverhang', 4.4, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.truckMesh, ...
    'Name', 'Truck2');
waypoints = [27.3 1.5 0;
    -81.1 1.7 0;
    -200.8 1.4 0];
speed = 9;
trajectory(truck2, waypoints, speed);

car6 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-17.399761832911 4.36855538572968 0], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car6');
waypoints = [19 4.5 0;
    -83.5 4.3 0;
    -152.1 4.4 0;
    -186.9 4.2 0;
    -300.2 3.9 0];
speed = 15;
trajectory(car6, waypoints, speed);

car7 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [2.99974993653156 -4.62613147202166 0], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car7');
waypoints = [-40.6 -4.5 0;
    28.2 -4.6 0;
    34.4 -4.6 0;
    40.9 -4.7 0;
    46.9 -4.6 0;
    50.9 -4.7 0;
    53.1 -5.8 0;
    55 -10.3 0;
    55.6 -17.7 0;
    55.8 -27.2 0;
    55.4 -75.6 0;
    55.4 -130.6 0];
speed = [8;8;8;8;8;8;8;8;8;8;8;8] + 2;
speed(end - 1) = 0;
waittime = [0;0;0;0;0;0;0;0;0;0;5;0];
trajectory(car7, waypoints, speed, waittime);

car8 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [64.5 -72.5 0], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car8');
waypoints = [64.5 -72.5 0;
    64.8 -11.8 0;
    66.5 -5.5 0;
    72.3 -4.2 0;
    119.8 -4.5 0;
    235.2 -4.5 0];
speed = [10;5;5;7;12;12];
yaw =  [89.0793254056711;90.9918485858485;42.1928774592878;-1.88045824755071;0.303666176569057;-0.151832966439271];
waittime = [0;0;0;0;0;0];
trajectory(car8, waypoints, speed, waittime, 'Yaw', yaw);

car9 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [58.5 75.6 0], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car9');
waypoints = [58.5 75.6 0;
    58.3 30 0;
    58.3 10.4 0;
    58.3 -5 0;
    58.3 -141.7 0];
speed = [12;5;5;13;13];
yaw =  [-90.3430950220481;-90.067696897134;-89.9829778543594;-90.0076029629418;-89.9961985185312];
waittime = [0;0;0;0;0];
trajectory(car9, waypoints, speed, waittime, 'Yaw', yaw);

vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [67.5 -23.5 0], ...
    'Yaw', 90, ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car10');

car11 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [87.3070043353447 4.11874562279826 0.00975048934713914], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car11');
waypoints = [87.3070043353447 4.11874562279826 0.00975048934713914;
    82.56 4.11 0.01;
    73.86 4.05 0.01;
    64.98 7.25 0.01;
    64.5 10.8 0;
    64.5 63.3 0;
    64.3 111 0;
    63.7 143.5 0;
    64 206.6 0];
speed = [12;7;0.2;11;10;12;12;12;12];
yaw =  [180.167486414454;-180.018297312907;-178.437467496013;114.339533635659;89.4361280759795;90.1026297891162;90.8412665661273;90.7650351071637;89.2088833986417];
trajectory(car11, waypoints, speed, 'Yaw', yaw);

bicycle = actor(scenario, ...
    'ClassID', 3, ...
    'Length', 1.7, ...
    'Width', 0.45, ...
    'Height', 1.7, ...
    'Position', [25.8983698244376 -7.59941069878516 0], ...
    'Mesh', driving.scenario.bicycleMesh, ...
    'Name', 'Bicycle');
waypoints = [0.9 -7.4 0;
    26.3 -7.6 0;
    47.5 -7.2 0;
    50.7 -7.6 0;
    52.1 -8.9 0;
    52.4 -11.7 0;
    52.4 -16.2 0;
    52.3 -46.4 0;
    52.5 -78.2 0];
speed = 5;
trajectory(bicycle, waypoints, speed);

car12 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [80.200566661512 1.69513926437348 0], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car12');
waypoints = [113.8 1.5 0;
    -75.6 2.6 0;
    -200.6 2.9 0];
speed = [12;12;12];
yaw =  [179.67734653534;179.64702843637;179.63934484283];
trajectory(car12, waypoints, speed, 'Yaw', yaw);

vehicle(scenario, ...
    'ClassID', 2, ...
    'Length', 8.2, ...
    'Width', 2.5, ...
    'Height', 3.5, ...
    'Position', [82.7 -7.5 0], ...
    'FrontOverhang', 4.4, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.truckMesh, ...
    'Name', 'Truck3');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [97.5 7.5 0], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car13');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-28.8 7.6 0], ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car14');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-37.9 7.6 0], ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car15');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-41 -7.3 0], ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car16');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-15.8 -7.3 0], ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car17');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [67.6 21.4 0], ...
    'Yaw', 90, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car19');

vehicle(scenario, ...
    'ClassID', 2, ...
    'Length', 8.2, ...
    'Width', 2.5, ...
    'Height', 3.5, ...
    'Position', [67.6333333333333 28.6 0], ...
    'Yaw', 90, ...
    'FrontOverhang', 4.4, ...
    'Mesh', driving.scenario.truckMesh, ...
    'PlotColor', [0.301 0.745 0.933], ...
    'Name', 'Car20');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [67.2333333333333 39.6 0], ...
    'Yaw', 90, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car21');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [52.7666666666667 12.7 0], ...
    'Yaw', -90, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [0.301 0.745 0.933], ...
    'Name', 'Car22');

% vehicle(scenario, ...
%     'ClassID', 1, ...
%     'Position', [59 -55 0], ...
%     'Yaw', -90, ...
%     'FrontOverhang', 0.9, ...
%     'Mesh', driving.scenario.carMesh, ...
%     'PlotColor', [0.301 0.745 0.933], ...
%     'Name', 'Car22');
% 
% vehicle(scenario, ...
%     'ClassID', 1, ...
%     'Position', [55 -70 0], ...
%     'Yaw', -90, ...
%     'FrontOverhang', 0.9, ...
%     'Mesh', driving.scenario.carMesh, ...
%     'PlotColor', [0.301 0.745 0.933], ...
%     'Name', 'Car22');